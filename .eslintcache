[{"E:\\Programming\\Tutorials\\clone-netflix\\src\\index.js":"1","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\App.js":"2","E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\requests.js":"3","E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\axios.js":"4","E:\\Programming\\Tutorials\\clone-netflix\\src\\context\\GlobalState.js":"5","E:\\Programming\\Tutorials\\clone-netflix\\src\\context\\AppReducer.js":"6","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\movies\\MovieRow.js":"7","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\movies\\MovieItem.js":"8","E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\seed.js":"9","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\banner\\Banner.js":"10","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\common\\PreviewModal.js":"11","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\movies\\MoviesContainer.js":"12","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\evidence\\EvidenceList.js":"13","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\evidence\\EvidenceListItem.js":"14","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\evidence\\EvidenceListItemSeperator.js":"15","E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\genreDb.js":"16","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\metadata\\MetaDataContainer.js":"17","E:\\Programming\\Tutorials\\clone-netflix\\src\\pages\\Watch.js":"18","E:\\Programming\\Tutorials\\clone-netflix\\src\\pages\\Home.js":"19","E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\utils.js":"20"},{"size":270,"mtime":1611098577054,"results":"21","hashOfConfig":"22"},{"size":589,"mtime":1616672546593,"results":"23","hashOfConfig":"22"},{"size":818,"mtime":1610902771254,"results":"24","hashOfConfig":"25"},{"size":145,"mtime":1610901675672,"results":"26","hashOfConfig":"22"},{"size":2056,"mtime":1616593991200,"results":"27","hashOfConfig":"22"},{"size":1310,"mtime":1616593479259,"results":"28","hashOfConfig":"22"},{"size":1140,"mtime":1617901127823,"results":"29","hashOfConfig":"22"},{"size":380,"mtime":1617901189701,"results":"30","hashOfConfig":"22"},{"size":9708,"mtime":1616749602397,"results":"31","hashOfConfig":"22"},{"size":3767,"mtime":1616610422123,"results":"32","hashOfConfig":"22"},{"size":2920,"mtime":1617901956009,"results":"33","hashOfConfig":"22"},{"size":941,"mtime":1617900268549,"results":"34","hashOfConfig":"22"},{"size":627,"mtime":1616608997722,"results":"35","hashOfConfig":"22"},{"size":353,"mtime":1616598800684,"results":"36","hashOfConfig":"22"},{"size":206,"mtime":1616598080751,"results":"37","hashOfConfig":"22"},{"size":110,"mtime":1616599366078,"results":"38","hashOfConfig":"22"},{"size":125,"mtime":1616599983778,"results":"39","hashOfConfig":"22"},{"size":860,"mtime":1616672220396,"results":"40","hashOfConfig":"22"},{"size":377,"mtime":1616605787237,"results":"41","hashOfConfig":"22"},{"size":622,"mtime":1616610039192,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1gy7yps",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1uuc8i7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"E:\\Programming\\Tutorials\\clone-netflix\\src\\index.js",[],["89","90"],"E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\App.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\requests.js",[],["91","92"],"E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\axios.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\context\\GlobalState.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\context\\AppReducer.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\movies\\MovieRow.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\movies\\MovieItem.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\seed.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\banner\\Banner.js",["93","94"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Banner.scss\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport axios from \"../../utils/axios\";\r\nimport { getURLQueryValue, setEllipsisForText } from \"../../utils/utils\";\r\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport Youtube from \"react-youtube\";\r\n\r\nconst base_image_url = \"https://image.tmdb.org/t/p/original/\";\r\nconst o = {\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  playerVars: {\r\n    autoplay: 1,\r\n    controls: 0,\r\n    modestbranding: 1,\r\n    playsinline: 0,\r\n    fs: 1,\r\n  },\r\n};\r\n\r\nfunction Banner() {\r\n  const [randomMovie, setRandomMovie] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const [isMuted, setMutedVal] = useState(true);\r\n  const [videoTarget, setVideoTarget] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const request = await axios.get(\r\n        `/movie/508442?api_key=dbd1c689e77c55468dc82708b47ae1fb`\r\n      );\r\n      if (request.data != null) {\r\n        setRandomMovie(request.data);\r\n        setIsLoading(false);\r\n      }\r\n\r\n      return request;\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (randomMovie) {\r\n      movieTrailer(\r\n        randomMovie?.title ||\r\n          randomMovie?.name ||\r\n          randomMovie?.original_name ||\r\n          \"\"\r\n      )\r\n        .then((url) => {\r\n          setTrailerUrl(getURLQueryValue(url, \"v\"));\r\n          console.log(url);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"No trailer for banner\");\r\n        });\r\n    }\r\n  }, [randomMovie]);\r\n\r\n  const controlVolume = (isMute) => {\r\n    if (isMute) {\r\n      videoTarget?.mute();\r\n    } else {\r\n      videoTarget?.unMute();\r\n    }\r\n\r\n    setMutedVal(isMute);\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"banner\"\r\n      style={\r\n        !isLoading\r\n          ? {\r\n              backgroundSize: \"cover\",\r\n              backgroundImage: `url(${base_image_url}${randomMovie?.backdrop_path})`,\r\n              backgroundPosition: \"center\",\r\n            }\r\n          : {}\r\n      }\r\n    >\r\n      <div className=\"banner__videoContainer\">\r\n        {\r\n          <>\r\n            <Youtube\r\n              id=\"yt\"\r\n              videoId={trailerUrl}\r\n              opts={o}\r\n              onReady={(e) => {\r\n                setVideoTarget(e.target);\r\n                e.target.mute();\r\n                e.target.playVideo();\r\n                e.target.setVolume(25);\r\n              }}\r\n              onEnd={(e) => e.target.playVideo()}\r\n            />\r\n          </>\r\n        }\r\n        {isMuted == true && (\r\n          <VolumeOffIcon\r\n            onClick={() => controlVolume(false)}\r\n            className=\"banner__volumeBtn banner__volumeOffBtn\"\r\n            fontSize=\"large\"\r\n          />\r\n        )}\r\n        {isMuted == false && (\r\n          <VolumeUpIcon\r\n            onClick={() => controlVolume(true)}\r\n            className=\"banner__volumeBtn banner__volumeOnBtn\"\r\n            fontSize=\"large\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {randomMovie?.title ||\r\n            randomMovie?.name ||\r\n            randomMovie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <p className=\"banner__description\">\r\n          {setEllipsisForText(randomMovie?.overview, 200)}\r\n        </p>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\common\\PreviewModal.js",["95"],"E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\movies\\MoviesContainer.js",["96"],"import React, { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../../context/GlobalState\";\r\nimport \"./MoviesContainer.scss\";\r\nimport MovieRow from \"./MovieRow\";\r\n\r\nfunction MovieContainer() {\r\n  const {\r\n    seedData,\r\n    selectedCard,\r\n    requestedCard,\r\n    clearRequestedMovie,\r\n    openModal,\r\n    selectMovie,\r\n  } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    if (selectedCard.movie == null && requestedCard.movie) {\r\n      selectMovie(requestedCard.targetElement, requestedCard.movie);\r\n      clearRequestedMovie();\r\n      openModal();\r\n    } else if (selectedCard.movie) {\r\n      openModal();\r\n    }\r\n  }, [selectedCard.movie]);\r\n\r\n  return (\r\n    <section className=\"movies-container\">\r\n      {seedData.map((movies, index) => (\r\n        <>\r\n          <MovieRow key={`key-${index.toString()}`} movies={movies} />\r\n        </>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MovieContainer;\r\n","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\evidence\\EvidenceList.js",["97"],"import React from \"react\";\r\nimport EvidenceListItem from \"./EvidenceListItem\";\r\nimport GenreDb from \"../../../utils/genreDb\";\r\n\r\nfunction EvidenceList({ evidenceItems }) {\r\n  const hasSeperator = (id, length) => {\r\n    if (id != 0) return true;\r\n\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <ul className=\"evidence-list\">\r\n      {evidenceItems.map((item, index) => (\r\n        <>\r\n          <EvidenceListItem\r\n            key={item}\r\n            hasSeperator={hasSeperator(index, evidenceItems.length)}\r\n            text={GenreDb[item]}\r\n          />\r\n        </>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default EvidenceList;\r\n","E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\evidence\\EvidenceListItem.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\evidence\\EvidenceListItemSeperator.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\genreDb.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\components\\moviePreview\\metadata\\MetaDataContainer.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\pages\\Watch.js",["98"],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Youtube from \"react-youtube\";\r\nimport \"./Watch.scss\";\r\n\r\nfunction Watch() {\r\n  const { id } = useParams();\r\n\r\n  const o = {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n      controls: 0,\r\n      modestbranding: 1,\r\n      playsinline: 0,\r\n      fs: 1,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"MAKE API REQUEST TO FETCH THE VID\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"yt-container\">\r\n      <div className=\"player\">\r\n        <div>\r\n          <Youtube\r\n            videoId=\"4TojlZYqPUo\"\r\n            opts={o}\r\n            onReady={() => console.log(\"ready\")}\r\n            onPause={() => console.log(\"on pause\")}\r\n          ></Youtube>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Watch;\r\n","E:\\Programming\\Tutorials\\clone-netflix\\src\\pages\\Home.js",[],"E:\\Programming\\Tutorials\\clone-netflix\\src\\utils\\utils.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":104,"column":18,"nodeType":"107","messageId":"108","endLine":104,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":111,"column":18,"nodeType":"107","messageId":"108","endLine":111,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":10,"column":3,"nodeType":"111","messageId":"112","endLine":10,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":24,"column":6,"nodeType":"115","endLine":24,"endColumn":26,"suggestions":"116"},{"ruleId":"105","severity":1,"message":"117","line":7,"column":12,"nodeType":"107","messageId":"108","endLine":7,"endColumn":14},{"ruleId":"109","severity":1,"message":"118","line":7,"column":11,"nodeType":"111","messageId":"112","endLine":7,"endColumn":13},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ExpandMoreOutlined' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clearRequestedMovie', 'openModal', 'requestedCard.movie', 'requestedCard.targetElement', and 'selectMovie'. Either include them or remove the dependency array.","ArrayExpression",["121"],"Expected '!==' and instead saw '!='.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [clearRequestedMovie, openModal, requestedCard.movie, requestedCard.targetElement, selectMovie, selectedCard.movie]",{"range":"124","text":"125"},[650,670],"[clearRequestedMovie, openModal, requestedCard.movie, requestedCard.targetElement, selectMovie, selectedCard.movie]"]